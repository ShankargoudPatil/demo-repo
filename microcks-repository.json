{"services":[{"id":"661fbd478c93376ecc00bd06","name":"Hello API Mock","version":"0.8","xmlNS":null,"type":"REST","metadata":{"createdOn":1713356103856,"lastUpdate":1714990454522,"annotations":null,"labels":null},"sourceArtifact":"https://raw.githubusercontent.com/microcks/microcks/master/samples/HelloAPI-soapui-project.xml","operations":[{"name":"/v1/hello","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"SCRIPT","dispatcherRules":"// Script dispatcher is used to select a response based on the incoming request.\n// Here are few examples showing how to match based on path, query param, header and body\n\n// Match based on query parameter\ndef queryString = mockRequest.getRequest().getQueryString()\nlog.info \"QueryString: \" + queryString\n\nif( queryString.contains(\"David\") )\n{\n    // return the name of the response you want to dispatch\n    return \"David Response\"\n}\nelse if( queryString.contains(\"Gavin\") )\n{\n    // return the name of the response you want to dispatch\n    return \"Gavin Response\"\n}\nelse return \"Unknown Response\"","defaultDelay":null,"resourcePaths":["/v1/hello"],"parameterConstraints":null}]},{"id":"661fbea08c93376ecc00bd0f","name":"Linearization","version":"1.0","xmlNS":null,"type":"GENERIC_REST","metadata":{"createdOn":1713356448478,"lastUpdate":1713356448478,"annotations":null,"labels":null},"sourceArtifact":null,"operations":[{"name":"POST /Linearization","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /Linearization/:id","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /Linearization/:id","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /Linearization","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /Linearization/:id","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]},{"id":"661fbfd88c93376ecc00bd18","name":"SensorModule","version":"1.0","xmlNS":null,"type":"GENERIC_REST","metadata":{"createdOn":1713356760712,"lastUpdate":1713356760712,"annotations":null,"labels":null},"sourceArtifact":null,"operations":[{"name":"POST /SensorModule","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /SensorModule/:id","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /SensorModule/:id","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /SensorModule","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /SensorModule/:id","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]},{"id":"662211a8d670f747138b734d","name":"Connect Manufacturing software Backend APIs","version":"1.0","xmlNS":null,"type":"REST","metadata":{"createdOn":1713508776351,"lastUpdate":1714990391901,"annotations":null,"labels":null},"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","operations":[{"name":"POST /gases","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/gases"],"parameterConstraints":null},{"name":"GET /gases","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/gases"],"parameterConstraints":null},{"name":"PUT /gases/{gasId}","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"gasId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /gases/{gasId}","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"gasId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"POST /uoms","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/uoms"],"parameterConstraints":null},{"name":"GET /uoms","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/uoms"],"parameterConstraints":null},{"name":"POST /api/sensorcharacteristics","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/api/sensorcharacteristics"],"parameterConstraints":null},{"name":"GET /api/sensorcharacteristics/{sensorUId}","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"sensorUId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /api/sensorcharacteristics/{sensorUId}","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"sensorUId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"POST /api/linearization","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/api/linearization"],"parameterConstraints":null},{"name":"GET /api/linearization","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/api/linearization"],"parameterConstraints":null},{"name":"POST /api/temperature-compensation","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/api/temperature-compensation"],"parameterConstraints":null},{"name":"GET /api/temperature-compensation","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/api/temperature-compensation"],"parameterConstraints":null},{"name":"POST /sensor-modules","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/sensor-modules"],"parameterConstraints":null},{"name":"GET /sensor-modules","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/sensor-modules"],"parameterConstraints":null},{"name":"GET /sensor-modules/serialnumber/{serialNumber}","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"serialNumber","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /sensor-modules/{id}","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /sensor-modules/{id}","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /sensor-modules/{id}","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /sensor-modules/update/delete","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/sensor-modules/update/delete"],"parameterConstraints":null},{"name":"GET /devices","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/devices"],"parameterConstraints":null},{"name":"POST /devices","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/devices"],"parameterConstraints":null},{"name":"GET /devices/{id}","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /devices/{id}","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /devices/{id}","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /device/serialnumber/{serialnumber}","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"serialnumber","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /device/allocate","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/device/allocate"],"parameterConstraints":null},{"name":"POST /sensormodule/results","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/sensormodule/results"],"parameterConstraints":null},{"name":"GET /sensor-module/results/{deviceId}/history","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"deviceId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /sensor-module/results/{deviceId}/latest","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"deviceId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /calibration/results/{deviceId}/latest","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_ELEMENTS","dispatcherRules":"deviceId ?? deviceId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"POST /calibration/results","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":["/calibration/results"],"parameterConstraints":null},{"name":"GET /calibration/results/{deviceId}/history","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"deviceId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /api/sensorcharacteristics/update/delete/{sensorUId}","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"sensorUId","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]},{"id":"6630a4e89340f908c66ea133","name":"Gases","version":"1.0","xmlNS":null,"type":"GENERIC_REST","metadata":{"createdOn":1714463976370,"lastUpdate":1714463976370,"annotations":null,"labels":null},"sourceArtifact":null,"operations":[{"name":"POST /Gases","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /Gases/:id","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /Gases/:id","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /Gases","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /Gases/:id","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]},{"id":"6630ab99d515ce1f2b20cbac","name":"SensorConfiguration","version":"1.0","xmlNS":null,"type":"GENERIC_REST","metadata":{"createdOn":1714465689038,"lastUpdate":1714465689038,"annotations":null,"labels":null},"sourceArtifact":null,"operations":[{"name":"POST /SensorConfiguration","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /SensorConfiguration/:id","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /SensorConfiguration/:id","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /SensorConfiguration","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /SensorConfiguration/:id","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]},{"id":"66338a5dd515ce1f2b20cbb9","name":"Bottle","version":"1.0","xmlNS":null,"type":"GENERIC_REST","metadata":{"createdOn":1714653789991,"lastUpdate":1714653789991,"annotations":null,"labels":null},"sourceArtifact":null,"operations":[{"name":"POST /Bottle","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /Bottle/:id","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /Bottle/:id","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /Bottle","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /Bottle/:id","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]},{"id":"66338ba0d515ce1f2b20cbbd","name":"SensorCompatible","version":"1.0","xmlNS":null,"type":"GENERIC_REST","metadata":{"createdOn":1714654112818,"lastUpdate":1714654112818,"annotations":null,"labels":null},"sourceArtifact":null,"operations":[{"name":"POST /SensorCompatible","method":"POST","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /SensorCompatible/:id","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"PUT /SensorCompatible/:id","method":"PUT","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"GET /SensorCompatible","method":"GET","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":null,"dispatcherRules":null,"defaultDelay":null,"resourcePaths":null,"parameterConstraints":null},{"name":"DELETE /SensorCompatible/:id","method":"DELETE","action":null,"inputName":null,"outputName":null,"bindings":null,"dispatcher":"URI_PARTS","dispatcherRules":"id","defaultDelay":null,"resourcePaths":null,"parameterConstraints":null}]}], "resources":[{"id":"661fd8758c93376ecc00bd1e","name":"Hello API Mock-0.8.xml","path":null,"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<con:soapui-project id=\"5c3212e2-6f93-4cea-81e8-362197cecfdc\" activeEnvironment=\"Default\" name=\"HelloAPI\" resourceRoot=\"\" soapui-version=\"5.2.1\" abortOnError=\"false\" runType=\"SEQUENTIAL\" xmlns:con=\"http://eviware.com/soapui/config\"><con:settings/><con:interface xsi:type=\"con:RestService\" id=\"5cc6f59e-b0b7-435b-a399-408586cc01fb\" wadlVersion=\"http://wadl.dev.java.net/2009/02\" name=\"Hello API\" type=\"rest\" basePath=\"/v1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:description>This is a sample Hello API</con:description><con:settings/><con:definitionCache type=\"TEXT\" rootPart=\"\"/><con:endpoints><con:endpoint>http://api.example.com</con:endpoint><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint></con:endpoints><con:resource name=\"/hello\" path=\"/hello\" id=\"137db4ce-c54f-4373-af1f-867b1adc6096\"><con:settings/><con:parameters/><con:method name=\"getGreeting\" id=\"c3b20b14-81c2-4ec9-abc2-cfb0c6025115\" method=\"GET\"><con:description>Get a new greeting message\nGet a new greeting message</con:description><con:settings/><con:parameters><con:parameter required=\"true\"><con:name>name</con:name><con:style>QUERY</con:style><con:description>Name of people to greet</con:description></con:parameter></con:parameters><con:representation type=\"RESPONSE\"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type=\"RESPONSE\"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type=\"RESPONSE\"><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type=\"RESPONSE\"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name=\"Request 1\" id=\"8d9f58a8-45a7-4c3e-a9d6-aeb6334329c8\" mediaType=\"application/json\"><con:settings/><con:endpoint>http://api.example.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id=\"62af16cd-3796-4dbf-b0f0-3416db326b01\" name=\"Hello API TestSuite\"><con:description>TestSuite generated for REST Service [Hello API]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id=\"bc82b283-b5bc-422c-b7c7-04bcaac4270b\" failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"/hello TestCase\" searchProperties=\"true\"><con:description>TestCase generated for REST Resource [/hello] located at [/hello]</con:description><con:settings/><con:testStep type=\"restrequest\" name=\"David Request\" id=\"a6bbe0a8-413a-42d8-810c-b5cad34eea2b\"><con:settings/><con:config service=\"Hello API\" resourcePath=\"/v1/hello\" methodName=\"getGreeting\" xsi:type=\"con:RestRequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:restRequest name=\"David Request\" id=\"8d9f58a8-45a7-4c3e-a9d6-aeb6334329c8\" mediaType=\"application/json\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint><con:request/><con:originalUri>http://lbroudoux-OSX.local/v1/hello</con:originalUri><con:assertion type=\"Valid HTTP Status Codes\" id=\"329eba81-cd27-4522-a5ca-a0e1cafc7ec4\" name=\"Valid HTTP Status Codes\"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type=\"JsonPath Match\" id=\"7394cfdf-b3c9-4d34-ae8b-110e41a2b9d8\" name=\"JsonPath Match\"><con:configuration><path>greeting</path><content>Hello David !</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type=\"Response SLA Assertion\" id=\"d6fe616f-5223-4d24-9f6b-23043cfcc147\" name=\"Response SLA\"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters><entry key=\"name\" value=\"David\" xmlns=\"http://eviware.com/soapui/config\"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type=\"restrequest\" name=\"Gavin Request\" id=\"ac1c9a11-6e65-425f-b9aa-7a20bbf09e41\"><con:settings/><con:config service=\"Hello API\" methodName=\"getGreeting\" resourcePath=\"/v1/hello\" xsi:type=\"con:RestRequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:restRequest name=\"Gavin Request\" id=\"c848f8c4-581a-4f86-89a0-fb105e27d79e\" mediaType=\"application/json\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint><con:request/><con:originalUri>http://lbroudoux-OSX.local/v1/hello</con:originalUri><con:assertion type=\"Valid HTTP Status Codes\" id=\"9d065067-859d-4d06-a673-5511144f0f92\" name=\"Valid HTTP Status Codes\"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type=\"JsonPath Match\" id=\"9f43636f-d92d-4fd4-b37c-3c652d5482e5\" name=\"JsonPath Match\"><con:configuration><path>greeting</path><content>Hello Gavin !</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type=\"Response SLA Assertion\" id=\"b159c170-d09c-4123-9a6b-d18d2a517aa7\" name=\"Response SLA\"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters><entry key=\"name\" value=\"Gavin\" xmlns=\"http://eviware.com/soapui/config\"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id=\"107a3cf2-b296-435c-bcd8-130f932965fa\" port=\"8089\" path=\"/\" host=\"lbroudoux-OSX.local\" name=\"Hello API Mock\"><con:settings/><con:properties><con:property><con:name>version</con:name><con:value>0.8</con:value></con:property></con:properties><con:restMockAction name=\"/v1/hello\" method=\"GET\" resourcePath=\"/v1/hello\" id=\"45ced2ad-a1a9-40f5-a65e-c14bd4501c32\"><con:settings/><con:defaultResponse>Unknwon Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>// Script dispatcher is used to select a response based on the incoming request.\n// Here are few examples showing how to match based on path, query param, header and body\n\n// Match based on query parameter\ndef queryString = mockRequest.getRequest().getQueryString()\nlog.info \"QueryString: \" + queryString\n\nif( queryString.contains(\"David\") )\n{\n    // return the name of the response you want to dispatch\n    return \"David Response\"\n}\nelse if( queryString.contains(\"Gavin\") )\n{\n    // return the name of the response you want to dispatch\n    return \"Gavin Response\"\n}\nelse return \"Unknown Response\"</con:dispatchPath><con:response name=\"David Response\" id=\"c6f2e949-26eb-4ed7-959e-f1ff59526bf8\" httpResponseStatus=\"200\" mediaType=\"application/json\"><con:settings/><con:responseContent>{\n\t'name':'David',\n\t'greeting':'Hello David !'\n}\n</con:responseContent></con:response><con:response name=\"Gavin Response\" id=\"ec02e3bf-05a4-4ed3-9c5a-73508c34bfbb\" httpResponseStatus=\"200\" mediaType=\"application/json\"><con:settings/><con:responseContent>{\n\t'name':'Gavin',\n\t'greeting':'Hello Gavin !'\n}\n</con:responseContent></con:response><con:response name=\"Unknwon Response\" id=\"fa7d6da7-e95c-43ff-a120-2961bdf463ea\" httpResponseStatus=\"405\" mediaType=\"application/json\"><con:settings/><con:responseContent/></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>","type":"SOAP_UI_PROJECT","serviceId":"661fbd478c93376ecc00bd06","sourceArtifact":"HelloAPI-soapui-project.xml","operations":null},{"id":"6638ad38145fd11a6e2d3861","name":"Connect Manufacturing software Backend APIs-1.0.yaml","path":null,"content":"openapi: 3.0.0\nx-stoplight:\n  id: 0viuooxfnpmu2\ninfo:\n  version: '1.0'\n  title: Connect Manufacturing software Backend APIs\n  description: 'Create the Backend APIs to do CRUD operations for Device, Sensor characteristics , Sensor modules, Calibration Results, Sensor module results'\nservers:\n  - url: 'http://localhost:3000'\n    description: ''\npaths:\n  /gases:\n    post:\n      summary: Create a gas\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Name is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1001\n                        ErrorDescription: Name is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/gas'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Conflict\n                    Detail: Gas name already exists\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1402\n                        ErrorDescription: Gas name already exists\n                        ErrorType: RequestError\n                        Severity: Warning\n                    Status: Conflict\n                    Instance: 'https://localhost/gases'\n        '500':\n          description: Internal Server Error\n      operationId: post-Gases\n      x-stoplight:\n        id: 5xlfrrwqby2xd\n      description: \"Create a new gas\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      x-internal: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddGasDto'\n            examples:\n              Example 1:\n                value:\n                  Name: Mehtane\n                  Formula: CH4\n      tags:\n        - Gases\n    get:\n      summary: Retrieve all gases\n      operationId: get-Gases\n      responses:\n        '200':\n          description: Gases list returned\n          content:\n            application/json:\n              schema:\n                type:\n                  - array\n                items:\n                  $ref: '#/components/schemas/GetGasesDto'\n                  x-stoplight:\n                    id: x6qiofpuiia4g\n              examples:\n                Example 1:\n                  value:\n                    - id: 597f6eca-3276-4993-bfeb-53cbbbba6f08\n                      Name: Methane\n                      Formula: CH4\n                    - id: 297f6eca-1276-4993-bfeb-53cbbbba6f08\n                      Name: Carbon Monoxide\n                      Formula: CO\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      servers:\n        - url: 'http://localhost:3000'\n      x-stoplight:\n        id: 540v2fcwr4y9m\n      description: \"Get a list of all gases available.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      x-internal: true\n      tags:\n        - Gases\n    parameters: []\n  '/gases/{gasId}':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: gasId\n        in: path\n        required: true\n        description: ID of the gas\n    put:\n      summary: Update a specific gas by Id\n      tags:\n        - Gases\n      responses:\n        '200':\n          description: Gas updated successfully\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Id is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1003\n                        ErrorDescription: Id is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/gases'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Gas not found. The specified gas ID does not exist.\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1004\n                        ErrorDescription: The specified gas ID does not exist.\n                        ErrorType: RequestError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/gases'\n        '500':\n          description: Internal Server Error\n      operationId: put-gases-gasId\n      x-stoplight:\n        id: 6zngxb8zuactn\n      description: \"Update the details of a specific gas based on its ID.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGasesDto'\n            examples:\n              Example 1:\n                value:\n                  id: 597f6eca-3276-4993-bfeb-53cbbbba6f08\n                  Name: Methane\n                  Formula: CH4\n    delete:\n      summary: Delete a specific gas by Id\n      tags:\n        - Gases\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Gas not found. The specified gas ID does not exist.\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1004\n                        ErrorDescription: The specified gas ID does not exist.\n                        ErrorType: RequestError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/gases'\n        '500':\n          description: Internal Server Error\n      operationId: delete-gases-gasId\n      x-stoplight:\n        id: xbos24yoeumzj\n      description: \"Remove a gas from the collection based on its ID.\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n  /uoms:\n    post:\n      summary: Create a new unit of measurement\n      description: \"Add a new unit of measurement\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      operationId: post-uom\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddUoMDto'\n            examples:\n              Example 1:\n                value:\n                  Name: PPM\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Name is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1005\n                        ErrorDescription: Name is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/uoms'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Conflict\n                    Detail: UOM name already exists\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1006\n                        ErrorDescription: UOM name already exists\n                        ErrorType: RequestError\n                        Severity: Warning\n                    Status: Conflict\n                    Instance: 'https://localhost/uoms'\n        '500':\n          description: Internal Server Error\n      servers:\n        - url: 'http://localhost:3000'\n      x-internal: true\n      x-stoplight:\n        id: z8lo169d32uec\n      tags:\n        - UOM\n    get:\n      summary: Retrieve all UoM\n      description: \"Get a list of all units of measurement. \\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      operationId: get-Uoms\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetUoMsDto'\n              examples:\n                Example:\n                  value:\n                    - id: 597f6eca-3276-4993-bfeb-53cbbbba6f08\n                      Name: '%VOL'\n                    - id: 397f6eca-4276-4193-bfeb-63cbbbba6f08\n                      Name: PPM\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n      servers:\n        - url: 'http://localhost:3000'\n      x-internal: true\n      x-stoplight:\n        id: ktf7787txnkel\n      tags:\n        - UOM\n    parameters: []\n  /api/sensorcharacteristics:\n    post:\n      summary: Create new sensor characteristics\n      description: \"Add a new Sensor Characterstics\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\\r\\nPayload requires some Primary key ids you can get those ids from below mentioned APIs\\r\\n\\r\\n- Get **GasId** from GET- /gases\\r\\n\\r\\n- Get **UomId** from GET- /uoms\\r\\n\\r\\n- Get **Linearization Id** from GET- /lLinearization API\\r\\n\\r\\n- Get **Temperature Compensations Id** from GET- /temperaturecompensation\\r\\n\\r\\n\"\n      operationId: post-SensorConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddSensorCharactersticsDto'\n            examples:\n              Example 1:\n                value:\n                  SensorUid: 1002\n                  GasId: 16bf8e49-f784-4e5a-af8d-311946f52f1c\n                  UnitOfMeasurementId: f8e9cc86-0b12-4a39-be06-857539eee1f7\n                  SensorName: Dual Sensor\n                  SensorType: Pellistor\n                  Issue: 1\n                  ConfigVersion: 11\n                  SensorManufacturer: CRC\n                  SensorLife: 10\n                  Range: 100\n                  WarmUp: 10\n                  IdealGain: 10.2\n                  ZeroSupression: 10\n                  ZeroFaultLevel: 30.5\n                  Dampening: 77\n                  ExposureTime: 23\n                  StabilityTestTime: 45\n                  PurgeTime: 36\n                  TempLowerLimit: 50\n                  TempUpperLimit: 60\n                  BumpDueInterval: 22\n                  BumpGasLevel: 12.6\n                  BumpTestLowerLimit: 15\n                  BumpTestUpperLimit: 10\n                  BumpTestTime: 40\n                  DefaultCalLevel: 30\n                  ProductionCalLimit: 30\n                  FiledCalLowerLimit: 40\n                  FiledCalUpperLimit: 50\n                  CalibrationDueInterval: 11\n                  LinearlizationId: 697f6eca-1276-4993-bfeb-53cbbbba6f08\n                  TemperatureCompensationId: 897f6eca-6276-2993-bfeb-53cbbbba6f08\n        description: ''\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: SensorName is Required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1010\n                        ErrorDescription: SensorName is Required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: Bad Request\n                    Instance: 'https://localhost/sensor/characteristics'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Conflict\n                    Detail: Sensor UId already exists\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1009\n                        ErrorDescription: Sensor UId already exists\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: Conflict\n                    Instance: 'https://localhost/sensor/characteristics'\n        '500':\n          description: Internal Server Error\n      servers:\n        - url: 'http://localhost:3000'\n      x-stoplight:\n        id: hm9q5wbj8snys\n      x-internal: true\n      tags:\n        - Sensor Characteristics\n    parameters: []\n  '/api/sensorcharacteristics/{sensorUId}':\n    get:\n      summary: Retrieve sensor characteristics by sensorUId\n      description: \"Retrieve  the information of the Sensor characteristics with the matching sensor UID.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\\r\\n\"\n      operationId: get-sensor-characteristics\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSensorCharactersticsDto'\n              examples:\n                Example 1:\n                  value:\n                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                    SensorUid: 1002\n                    GasId: 16bf8e49-f784-4e5a-af8d-311946f52f1c\n                    UnitOfMeasurementId: f8e9cc86-0b12-4a39-be06-857539eee1f7\n                    SensorName: GasAlert Pro GA-2000\n                    SensorType: Toxic\n                    Issue: 1\n                    ConfigVersion: 11\n                    SensorManufacturer: crowcon\n                    SensorLife: 10\n                    Range: 100\n                    WarmUp: 10\n                    IdealGain: 10.2\n                    ZeroSupression: 10\n                    ZeroFaultLevel: 30.5\n                    Dampening: 77\n                    ExposureTime: 23\n                    StabilityTestTime: 45\n                    PurgeTime: 36\n                    TempLowerLimit: 50\n                    TempUpperLimit: 60\n                    BumpDueInterval: 22\n                    BumpGasLevel: 12.6\n                    BumpTestLowerLimit: 15\n                    BumpTestUpperLimit: 10\n                    BumpTestTime: 40\n                    DefaultCalLevel: 30\n                    ProductionCalLimit: 30\n                    FiledCalLowerLimit: 40\n                    FiledCalUpperLimit: 50\n                    CalibrationDueInterval: 11\n                    Linearlization:\n                      id: 197f6eca-1276-0993-bfeb-53cbbbba6f08\n                      Issue: 1\n                      NoOfLinPoints: 4\n                      ApparentGas1: 10.5\n                      ActualGas1: 20.3\n                    TemperatureCompensationId:\n                      id: 897f6eca-6276-4993-bfeb-73cbbbba6f08\n                      Issue: 2\n                      NoOfTempPoints: 5\n                      TempPoint1: 20.5\n                      ZeroOffSet1: 15.6\n                      Gain1: 10.6\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Sensor UID Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor UId not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1011\n                        ErrorDescription: Sensor UId not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor/characterstics'\n          headers: {}\n        '500':\n          description: Internal Server Error\n      servers:\n        - url: 'http://localhost:3000'\n      x-stoplight:\n        id: 3329232tvy7px\n      x-internal: true\n      tags:\n        - Sensor Characteristics\n    parameters:\n      - schema:\n          type: integer\n        name: sensorUId\n        in: path\n        required: true\n    put:\n      summary: Update the sensor characteristics\n      tags: []\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples: {}\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor UId not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1401\n                        ErrorDescription: Sensor UId not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensorconfig/1020'\n                Example 2:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor UId not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1401\n                        ErrorDescription: Sensor UId not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensorcharacteristics/1020'\n        '500':\n          description: Internal Server Error\n      operationId: put-api-sensorcharacteristics-sensorUId\n      x-stoplight:\n        id: 429wpvvk6mezg\n      description: |-\n        This API is used to update the sensor characteristics by sensorUId\n\n        Payload properties are optional, user can send whichever properties need to update or modify\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSensorCharactersticsDto'\n            examples:\n              Example 1:\n                value:\n                  GasId: 16bf8e49-f784-4e5a-af8d-311946f52f1c\n                  UnitOfMeasurementId: f8e9cc86-0b12-4a39-be06-857539eee1f7\n                  SensorName: Dual sensor\n                  SensorType: Toxic\n                  Issue: 1\n                  ConfigVersion: 11\n                  SensorManufacturer: CRC\n                  SensorLife: 10\n                  Range: 100\n                  WarmUp: 10\n                  IdealGain: 10.2\n                  ZeroSupression: 10\n                  ZeroFaultLevel: 30.5\n                  Dampening: 77\n                  ExposureTime: 23\n                  StabilityTestTime: 45\n                  PurgeTime: 36\n                  TempLowerLimit: 50\n                  TempUpperLimit: 60\n                  BumpDueInterval: 22\n                  BumpGasLevel: 12.6\n                  BumpTestLowerLimit: 15\n                  BumpTestUpperLimit: 10\n                  BumpTestTime: 40\n                  DefaultCalLevel: 30\n                  ProductionCalLimit: 30\n                  FiledCalLowerLimit: 40\n                  FiledCalUpperLimit: 50\n                  CalibrationDueInterval: 11\n                  LinearlizationId: 697f6eca-1276-4993-bfeb-53cbbbba6f08\n                  TemperatureCompensationId: 897f6eca-6276-2993-bfeb-53cbbbba6f08\n  /api/linearization:\n    post:\n      summary: Create a new linearization\n      tags:\n        - Linearization\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Issue is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1012\n                        ErrorDescription: Issue is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/linearization'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: post-linearlization\n      x-stoplight:\n        id: r2fkdbq05ae32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddLinearizationDto'\n            examples:\n              Example 1:\n                value:\n                  Issue: 1\n                  NoOfLinPoints: 4\n                  ApparentGas1: 10.5\n                  ActualGas1: 20.3\n        description: ''\n      description: \"Add a new linearization values\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      x-internal: true\n    get:\n      summary: Retrieve all linearizations\n      tags:\n        - Linearization\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLinearizationDto'\n              examples:\n                Example 1:\n                  value:\n                    id: 197f6eca-1276-0993-bfeb-53cbbbba6f08\n                    Issue: 1\n                    NoOfLinPoints: 4\n                    ApparentGas1: 10.5\n                    ActualGas1: 20.3\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-linearlization\n      x-stoplight:\n        id: fqdyz9nnq0w4b\n      description: \"Get a list of all linearization vlaues\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      x-internal: true\n    parameters: []\n  /api/temperature-compensation:\n    post:\n      summary: Create a new temperature compensation\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Issue is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1013\n                        ErrorDescription: Issue  is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/temperaturecomensation'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: post-temperaturecompensation\n      x-stoplight:\n        id: 0lz2l34iq0dq7\n      x-internal: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTemperatureCompensationDto'\n            examples:\n              Example 1:\n                value:\n                  Issue: 2\n                  NoOfTempPoints: 5\n                  TempPoint1: 20.5\n                  ZeroOffSet1: 15.6\n                  Gain1: 10.6\n      description: \"Add a new Temperature Compensation values\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n      tags:\n        - Temperature Compensation\n    get:\n      summary: Retrieve all temperature compensation\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTemperatureCompensationDto'\n              examples:\n                Example 1:\n                  value:\n                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                    Issue: 2\n                    NoOfTempPoints: 5\n                    TempPoint1: 20.5\n                    ZeroOffSet1: 15.6\n                    Gain1: 10.6\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-temperaturecompensation\n      x-stoplight:\n        id: nvsqz957e5zn2\n      description: \"Get a list of all available Temperature compensation vlaues\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      tags:\n        - Temperature Compensation\n    parameters: []\n  /sensor-modules:\n    post:\n      summary: Create a new sensor module\n      tags:\n        - Sensor Module\n      responses:\n        '201':\n          description: Created\n          content: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: SensorSerialNumber property is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1501\n                        ErrorDescription: SensorSerialNumber property is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/sensormodule'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Conflict\n                    Detail: Sensor module already exists\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1014\n                        ErrorDescription: Sensor module already exists\n                        ErrorType: RequestError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor-module'\n        '500':\n          description: Internal Server Error\n      operationId: post-sensormodule\n      x-stoplight:\n        id: 4cc7b7zto8ecw\n      x-internal: true\n      description: \"Add a new sensor module\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddSensorModuleDto'\n            examples:\n              Example 1:\n                value:\n                  SerialNumber: MD001001\n                  SensorSerialNumber: SR001001\n                  SensorTechnology: IR\n                  BoardVersion:\n                    Version: 1\n                    Major: 4\n                    Minor: 6\n                  FirmwareVersion:\n                    Version: 1\n                    Major: 5\n                    Minor: 7\n                  DateOfManufacture: '2019-08-24T14:15:22Z'\n                  SensorExpiryDate: '2019-08-24T14:15:22Z'\n                  WarrantyPeriod: 3 Years\n                  ComplianceStatus: 1\n                  SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n    get:\n      summary: Retrieve all sensor modules\n      tags:\n        - Sensor Module\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetSensorModuleDto'\n                  x-stoplight:\n                    id: 6m827gv5sgsq4\n              examples:\n                Example 1:\n                  value:\n                    - Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                      SerialNumber: W1235001\n                      SensorSerialNumber: SR0011\n                      SensorTechnology: IR\n                      BoardVersion:\n                        Version: 1\n                        Major: 4\n                        Minor: 6\n                      FirmwareVersion:\n                        Version: 1\n                        Major: 4\n                        Minor: 6\n                      DateOfManufacture: '2019-08-24T14:15:22Z'\n                      SensorExpiryDate: '2019-08-24T14:15:22Z'\n                      WarrantyPeriod: 3 years\n                      ComplianceStatus: 1\n                      SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n                      SensorUid: 1003\n                      GasName: C02\n                      UoM: PPM\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-sensormodule\n      x-stoplight:\n        id: v39esvzzyo0h5\n      x-internal: true\n      description: \"Get a list of all sensor modules.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n    parameters: []\n  '/sensor-modules/serialnumber/{serialNumber}':\n    get:\n      summary: Retrieve a sensor module by serial number\n      tags:\n        - Sensor Module\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSensorModuleDto'\n              examples:\n                Example 1:\n                  value:\n                    Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                    SerialNumber: W1235001\n                    SensorSerialNumber: SR0011\n                    SensorTechnology: IR\n                    BoardVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    FirmwareVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    DateOfManufacture: '2019-08-24T14:15:22Z'\n                    SensorExpiryDate: '2019-08-24T14:15:22Z'\n                    WarrantyPeriod: 3 years\n                    ComplianceStatus: 1\n                    SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n                    SensorUid: 1003\n                    GasName: C02\n                    UoM: PPM\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor serial number not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1016\n                        ErrorDescription: Sensor serial number not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor-modules/sensornumber'\n        '500':\n          description: Internal Server Error\n      operationId: get-sensormodule-seralNumber\n      x-stoplight:\n        id: 6dnt65ufsmj91\n      x-internal: true\n      description: \"Get details of a specific sensor module based on its serial number.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n    parameters:\n      - schema:\n          type: string\n        name: serialNumber\n        in: path\n        required: true\n        description: Serial number of the sensor module\n  '/sensor-modules/{id}':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Retrieve a sensor module by Id\n      tags:\n        - Sensor Module\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSensorModuleDto'\n              examples:\n                Example 1:\n                  value:\n                    Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                    SerialNumber: W1235001\n                    SensorSerialNumber: SR0011\n                    SensorTechnology: IR\n                    BoardVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    FirmwareVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    DateOfManufacture: '2019-08-24T14:15:22Z'\n                    SensorExpiryDate: '2019-08-24T14:15:22Z'\n                    WarrantyPeriod: 3 years\n                    ComplianceStatus: 1\n                    SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n                    SensorUid: 1003\n                    GasName: C02\n                    UoM: PPM\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor module not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1017\n                        ErrorDescription: Sensor Module Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor-modules/'\n        '500':\n          description: Internal Server Error\n      operationId: get-sensormodule-id\n      x-stoplight:\n        id: 6mqs76y0lev3s\n      x-internal: true\n      description: \"Get details of a specific sensor module by Id.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n    put:\n      summary: Update a sensor module by Id\n      tags:\n        - Sensor Module\n      responses:\n        '200':\n          description: OK\n          content: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Id is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1003\n                        ErrorDescription: Id is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/sensor-modules'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor module not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1017\n                        ErrorDescription: Sensor Module Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor-modules'\n        '500':\n          description: Internal Server Error\n      operationId: put-sensormodule-id\n      x-stoplight:\n        id: gmea013ilyo7k\n      x-internal: true\n      description: \"Update the details of a specific sensor module based on its ID.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSensorModuleDto'\n            examples:\n              Example 1:\n                value:\n                  Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                  SensorSerialNumber: SNR20002\n                  BoardVersion:\n                    Version: 1\n                    Major: 4\n                    Minor: 6\n                  FirmwareVersion:\n                    Version: 2\n                    Major: 1\n                    Minor: 6\n                  SensorTechnology: IR\n                  DateOfManufacture: '2019-08-24T14:15:22Z'\n                  SensorExpiryDate: '2019-08-24T14:15:22Z'\n                  WarrantyPeriod: 3 Years\n                  ComplianceStatus: 1\n                  SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n    delete:\n      summary: Delete a sensor module by Id\n      tags:\n        - Sensor Module\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor module not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1017\n                        ErrorDescription: Sensor Module Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor-modules'\n        '500':\n          description: Internal Server Error\n      operationId: delete-sensormodule-id\n      x-stoplight:\n        id: 433l1lyuwkxka\n      x-internal: true\n      description: \"Remove a sensor module by Id\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n  /sensor-modules/update/delete:\n    put:\n      summary: Soft delete the sensor module\n      tags:\n        - Sensor Module\n      responses:\n        '200':\n          description: OK\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor module not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1017\n                        ErrorDescription: Sensor Module Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensor-modules/update/delete'\n        '500':\n          description: Internal Server Error\n      operationId: put-sensor-modules-update-delete\n      x-stoplight:\n        id: w0mglaz80no9d\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                x-stoplight:\n                  id: zev2jhcqy9nt0\n                type: string\n                format: uuid\n            examples:\n              Example 1:\n                value:\n                  - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                  - 391f6eca-2276-1993-bfeb-33cbbbba6f08\n      description: \"Mark a sensor module as deleted based by Id\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n    parameters: []\n  /devices:\n    get:\n      summary: Retrieve all devices\n      tags:\n        - Device\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetDeviceDto'\n                  x-stoplight:\n                    id: 7oq0f9yqt85wv\n              examples:\n                Example 1:\n                  value:\n                    - Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                      DeviceType: Scout\n                      SerialNumber: W120081\n                      FirmwareVersion:\n                        Version: 1\n                        Major: 4\n                        Minor: 6\n                      DateOfManufacture: '2019-08-24T14:15:22Z'\n                      BoardVersion:\n                        Version: 1\n                        Major: 4\n                        Minor: 6\n                      Status: AllocationPending\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-device\n      x-stoplight:\n        id: ox75fapuyvj5h\n      x-internal: true\n      description: \"Get a list of all available manufactured devices.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n    parameters: []\n    post:\n      summary: Create a new device\n      tags:\n        - Device\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Serial number is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1521\n                        ErrorDescription: Serial number is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/device'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Conflict\n                    Detail: Device already exists\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1020\n                        ErrorDescription: Device already exists\n                        ErrorType: RequestError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/devices'\n        '500':\n          description: Internal Server Error\n      operationId: post-devices\n      x-stoplight:\n        id: 4ai0cnv95dh66\n      description: \"Add a new manufactured device from manufacturing application\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddDeviceDto'\n            examples:\n              Example 1:\n                value:\n                  DeviceType: 88b21f8e-9de2-4470-8417-7d4188046bf4\n                  SerialNumber: W12098111\n                  FirmwareVersion:\n                    Version: 1\n                    Major: 4\n                    Minor: 6\n                  DateOfManufacture: '2019-08-24T14:15:22Z'\n                  BoardVersion:\n                    Version: 1\n                    Major: 4\n                    Minor: 6\n                  Status: AllocationPending\n                  SensorModuleId:\n                    - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                    - 397f6eca-1276-2993-bfeb-53cbbbba6f08\n  '/devices/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Retrieve a device by Id\n      tags:\n        - Device\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeviceDto'\n              examples:\n                Example 1:\n                  value:\n                    Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                    DeviceType: Scout\n                    SerialNumber: W120081\n                    FirmwareVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    DateOfManufacture: '2019-08-24T14:15:22Z'\n                    BoardVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    Status: AllocationPending\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Device not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1021\n                        ErrorDescription: Device not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/devices'\n        '500':\n          description: Internal Server Error\n      operationId: get-devices-id\n      x-stoplight:\n        id: 0xl4227a3uvlo\n      description: \"Get details of a specific device by Id.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n    put:\n      summary: Update a device\n      tags:\n        - Device\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      operationId: put-devices-id\n      x-stoplight:\n        id: z2a1792swtd6p\n      description: \"Update the details of a specific device based on its ID.\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n    delete:\n      summary: Delete a device\n      tags:\n        - Device\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      operationId: delete-devices-id\n      x-stoplight:\n        id: 7bwtwnglx3opi\n      description: \"Remove the device\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\"\n      security: []\n  '/device/serialnumber/{serialnumber}':\n    parameters:\n      - schema:\n          type: string\n        name: serialnumber\n        in: path\n        required: true\n    get:\n      summary: Get device by Serial number\n      tags:\n        - Device\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeviceDto'\n              examples:\n                Example 1:\n                  value:\n                    Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n                    DeviceType: Scout\n                    SerialNumber: W120081\n                    FirmwareVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    DateOfManufacture: '2019-08-24T14:15:22Z'\n                    BoardVersion:\n                      Version: 1\n                      Major: 4\n                      Minor: 6\n                    Status: AllocationPending\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Serial number not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1601\n                        ErrorDescription: Serial number not Found\n                        'null': null\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/device'\n      operationId: get-device-serialnumber\n      x-stoplight:\n        id: c4zlh24foxdna\n      description: \"Gset the device information by serial number\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      x-internal: true\n      security: []\n  /device/allocate:\n    put:\n      description: ''\n      summary: Allocate Device to Customer\n      tags:\n        - Device\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n      operationId: put-device-allocate\n      x-stoplight:\n        id: hj1j3k8no7c37\n      x-internal: true\n      security: []\n  /sensormodule/results:\n    post:\n      summary: Upload a sensor module results\n      responses:\n        '200':\n          description: OK\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      operationId: post-sensormodule-results\n      x-stoplight:\n        id: lejmclg6fv8a3\n      x-internal: true\n      tags:\n        - Sensor Module Results\n      description: \"This API is used to upload the sensor module results for manufactured devices\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      security: []\n  '/sensor-module/results/{deviceId}/history':\n    parameters:\n      - schema:\n          type: string\n        name: deviceId\n        in: path\n        required: true\n    get:\n      summary: Retrieve the sensor module results history by device Id\n      responses:\n        '200':\n          description: OK\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      operationId: get-sensor-module-results-deviceId-history\n      x-stoplight:\n        id: x8u8sktkgg1ju\n      tags:\n        - Sensor Module Results\n      description: \" Get the device sensor module results history by device id\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      security: []\n  '/sensor-module/results/{deviceId}/latest':\n    parameters:\n      - schema:\n          type: string\n        name: deviceId\n        in: path\n        required: true\n    get:\n      summary: Retrieve the latest sensor module results by device Id\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      operationId: get-sensor-module-results-deviceId-latest\n      x-stoplight:\n        id: v2icoz7pxaks6\n      x-internal: true\n      tags:\n        - Sensor Module Results\n      description: \" Get the device latest sensor module results by device id\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      security: []\n  '/calibration/results/{deviceId}/latest':\n    get:\n      summary: Retrieve the latest calibration results by device Id\n      tags:\n        - Calibration Results\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Device not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1611\n                        ErrorDescription: Device not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/calibration/results/{Id}/latest'\n        '500':\n          description: Internal Server Error\n      operationId: get-device-calibration-result\n      x-stoplight:\n        id: cwrex1xf2a9at\n      x-internal: true\n      parameters:\n        - schema:\n            type: string\n            format: uuid\n          in: query\n          name: deviceId\n          required: true\n      description: \" Get the device latest calibration results by device id\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      security: []\n    parameters:\n      - schema:\n          type: string\n        name: deviceId\n        in: path\n        required: true\n  /calibration/results:\n    parameters: []\n    post:\n      summary: Upload a Calibration Results\n      tags:\n        - Calibration Results\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Bad Request\n                    Detail: Result Property is required\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1421\n                        ErrorDescription: Result Property is required\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: BadRequest\n                    Instance: 'https://localhost/device/calibration/result'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Device not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1201\n                        ErrorDescription: Device not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/device/calibration/results'\n        '500':\n          description: Internal Server Error\n      operationId: post-device-calibration-results\n      x-internal: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddCalibrationResultsDto'\n            examples:\n              Example 1:\n                value:\n                  DeviceId: 90849055-5bc5-42d7-ae81-a3806b959be8\n                  Result: true\n                  CalibratedOn: '2019-08-24T14:15:22Z'\n                  Note: Calibration done\n      description: \"This API is used to upload the calibration results for manufactured devices\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      x-stoplight:\n        id: iybjx45aoj80a\n      security: []\n  '/calibration/results/{deviceId}/history':\n    get:\n      summary: Retrieve the calibration results history by device Id\n      tags:\n        - Calibration Results\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetCalibrationResultsDto'\n                  x-stoplight:\n                    id: 5zrfoct6yutb8\n              examples:\n                Example 1:\n                  value:\n                    - DeviceId: 90849055-5bc5-42d7-ae81-a3806b959be8\n                      Result: true\n                      CalibratedOn: '2023-08-24T14:15:22Z'\n                      Note: Calibration done\n                    - DeviceId: 90849055-5bc5-42d7-ae81-a3806b959be8\n                      Result: true\n                      CalibratedOn: '2023-09-24T14:15:22Z'\n                      Note: Calibration done\n        '204':\n          description: No Content\n        '401':\n          description: Unauthorized\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Device not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1201\n                        ErrorDescription: Device not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/device/calibration/results/{id}/history'\n        '500':\n          description: Internal Server Error\n      operationId: get-calibration-results-deviceId-history\n      x-stoplight:\n        id: uso3zb1p4fke9\n      description: \" Getall calibration results history by device id\\r\\n\\r\\n**Authentication**:\\r\\nUsers must authenticate using a valid access token with the necessary permissions to access this API.\\r\\n\"\n      security: []\n    parameters:\n      - schema:\n          type: string\n        name: deviceId\n        in: path\n        required: true\n  '/api/sensorcharacteristics/update/delete/{sensorUId}':\n    parameters:\n      - schema:\n          type: integer\n        name: sensorUId\n        in: path\n        required: true\n    put:\n      summary: Soft delete the sensor characteristics by sensor Uid\n      tags: []\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n              examples:\n                Example 1:\n                  value:\n                    Title: Not Found\n                    Detail: Sensor UId not Found\n                    IsSuccess: false\n                    Errors:\n                      - ErrorCode: Err_1401\n                        ErrorDescription: Sensor UId not Found\n                        ErrorType: ValidationError\n                        Severity: Warning\n                    Status: NotFound\n                    Instance: 'https://localhost/sensorcharacteristics/update/delete/1020'\n      operationId: put-api-sensorcharacteristics-update-delete-sensorUId\n      x-stoplight:\n        id: fx914z4c1oyt2\n      description: |\n        This API is used to soft delete the sensor characterisitcs by sensorUId\ncomponents:\n   schemas:\n    AddSensorCharactersticsDto:\n      type: object\n      title: AddSensorCharactersticsDto\n      x-stoplight:\n        id: eejfgutb54kh3\n      example:\n        - SensorUid: 1002\n          GasId: 16bf8e49-f784-4e5a-af8d-311946f52f1c\n          UnitOfMeasurementId: f8e9cc86-0b12-4a39-be06-857539eee1f7\n          SensorName: Dual sensor\n          SensorType: Toxic\n          Issue: 1\n          ConfigVersion: 11\n          SensorManufacturer: CRC\n          SensorLife: 10\n          Range: 100\n          WarmUp: 10\n          IdealGain: 10.2\n          ZeroSupression: 10\n          ZeroFaultLevel: 30.5\n          Dampening: 77\n          ExposureTime: 23\n          StabilityTestTime: 45\n          PurgeTime: 36\n          TempLowerLimit: 50\n          TempUpperLimit: 60\n          BumpDueInterval: 22\n          BumpGasLevel: 12.6\n          BumpTestLowerLimit: 15\n          BumpTestUpperLimit: 10\n          BumpTestTime: 40\n          DefaultCalLevel: 30\n          ProductionCalLimit: 30\n          FiledCalLowerLimit: 40\n          FiledCalUpperLimit: 50\n          CalibrationDueInterval: 11\n          LinearlizationId: 697f6eca-1276-4993-bfeb-53cbbbba6f08\n          TemperatureCompensationId: 897f6eca-6276-2993-bfeb-53cbbbba6f08\n      required:\n        - SensorUid\n        - GasId\n        - UnitOfMeasurementId\n        - SensorName\n        - SensorType\n        - Issue\n        - ConfigVersion\n        - SensorManufacturer\n        - SensorLife\n        - Range\n        - WarmUp\n        - IdealGain\n        - ZeroSupression\n        - ZeroFaultLevel\n        - Dampening\n        - ExposureTime\n        - StabilityTestTime\n        - PurgeTime\n        - TempLowerLimit\n        - TempUpperLimit\n        - BumpDueInterval\n        - BumpGasLevel\n        - BumpTestLowerLimit\n        - BumpTestUpperLimit\n        - BumpTestTime\n        - DefaultCalLevel\n        - ProductionCalLimit\n        - FiledCalLowerLimit\n        - FiledCalUpperLimit\n        - CalibrationDueInterval\n        - LinearlizationId\n        - TemperatureCompensationId\n      properties:\n        SensorUid:\n          type: integer\n          x-stoplight:\n            id: hxweqs73x7mtc\n        GasId:\n          type: string\n          x-stoplight:\n            id: gw9u4wsyki8ur\n          format: uuid\n        UnitOfMeasurementId:\n          type: string\n          x-stoplight:\n            id: c43gh162te0zb\n          format: uuid\n        SensorName:\n          type: string\n          x-stoplight:\n            id: oex96p2wvs6k3\n        SensorType:\n          x-stoplight:\n            id: gswsnmkjbgulj\n          enum:\n            - Toxic\n            - Pellistor\n            - O2\n        Issue:\n          type: integer\n          x-stoplight:\n            id: 5g4hpyz45pe7a\n        ConfigVersion:\n          type: integer\n          x-stoplight:\n            id: l1avls6nk1zgh\n        SensorManufacturer:\n          type: string\n          x-stoplight:\n            id: wzk1ty7b23dyh\n        SensorLife:\n          type: integer\n          x-stoplight:\n            id: d2p3zjgh1q42r\n        Range:\n          type: integer\n          x-stoplight:\n            id: c8d3r6iflg0ye\n        WarmUp:\n          type: integer\n          x-stoplight:\n            id: dp1tfwlkfjdam\n        IdealGain:\n          type: number\n          x-stoplight:\n            id: 7tapexjh11qrz\n          format: float\n        ZeroSupression:\n          type: integer\n          x-stoplight:\n            id: atajxz86khm49\n        ZeroFaultLevel:\n          type: number\n          x-stoplight:\n            id: rn66at7pmwgbw\n          format: float\n        Dampening:\n          type: integer\n          x-stoplight:\n            id: 554hbbz8txfrm\n        ExposureTime:\n          type: integer\n          x-stoplight:\n            id: b0qtqfnmpmb1g\n        StabilityTestTime:\n          type: integer\n          x-stoplight:\n            id: lq29tgtedkvc3\n        PurgeTime:\n          type: integer\n          x-stoplight:\n            id: 1mjhzxi2dh5e4\n        TempLowerLimit:\n          type: integer\n          x-stoplight:\n            id: uu2xgu1dwdga0\n        TempUpperLimit:\n          type: integer\n          x-stoplight:\n            id: p6g5i940y7h2h\n        BumpDueInterval:\n          type: integer\n          x-stoplight:\n            id: eu47p1cglcz1i\n        BumpGasLevel:\n          type: number\n          x-stoplight:\n            id: fyu6ajqyea4pi\n          format: float\n        BumpTestLowerLimit:\n          type: integer\n          x-stoplight:\n            id: hog7uvqb8q0na\n        BumpTestUpperLimit:\n          type: integer\n          x-stoplight:\n            id: 8kxdfstma1438\n        BumpTestTime:\n          type: integer\n          x-stoplight:\n            id: ij45o702cwokj\n        DefaultCalLevel:\n          type: integer\n          x-stoplight:\n            id: ch6kf9ct22nfl\n        ProductionCalLimit:\n          type: integer\n          x-stoplight:\n            id: xb8e47dwwnjvm\n        FiledCalLowerLimit:\n          type: integer\n          x-stoplight:\n            id: exc0uccqb3quj\n        FiledCalUpperLimit:\n          type: integer\n          x-stoplight:\n            id: 7692px9ntpk1h\n        CalibrationDueInterval:\n          type: integer\n          x-stoplight:\n            id: b1q7jwz964b6q\n        LinearlizationId:\n          type: string\n          x-stoplight:\n            id: 2nfj1ye3amvhy\n          format: uuid\n        TemperatureCompensationId:\n          type: string\n          x-stoplight:\n            id: jho29oxhqss54\n          format: uuid\n      description: ''\n    UpdateSensorCharactersticsDto:\n      type: object\n      x-stoplight:\n        id: qqih2am8smzxn\n      title: UpdateSensorCharactersticsDto\n      example:\n        - SensorUid: 1002\n          GasId: 16bf8e49-f784-4e5a-af8d-311946f52f1c\n          UnitOfMeasurementId: f8e9cc86-0b12-4a39-be06-857539eee1f7\n          SensorName: Dual sensor\n          SensorType: Toxic\n          Issue: 1\n          ConfigVersion: 11\n          SensorManufacturer: CRC\n          SensorLife: 10\n          Range: 100\n          WarmUp: 10\n          IdealGain: 10.2\n          ZeroSupression: 10\n          ZeroFaultLevel: 30.5\n          Dampening: 77\n          ExposureTime: 23\n          StabilityTestTime: 45\n          PurgeTime: 36\n          TempLowerLimit: 50\n          TempUpperLimit: 60\n          BumpDueInterval: 22\n          BumpGasLevel: 12.6\n          BumpTestLowerLimit: 15\n          BumpTestUpperLimit: 10\n          BumpTestTime: 40\n          DefaultCalLevel: 30\n          ProductionCalLimit: 30\n          FiledCalLowerLimit: 40\n          FiledCalUpperLimit: 50\n          CalibrationDueInterval: 11\n          LinearlizationId: 697f6eca-1276-4993-bfeb-53cbbbba6f08\n          TemperatureCompensationId: 897f6eca-6276-2993-bfeb-53cbbbba6f08\n      properties:\n        GasId:\n          type: string\n          format: uuid\n        UnitOfMeasurementId:\n          type: string\n          format: uuid\n        SensorName:\n          type: string\n        SensorType:\n          enum:\n            - Toxic\n            - Pellistor\n            - O2\n        Issue:\n          type: integer\n        ConfigVersion:\n          type: integer\n        SensorManufacturer:\n          type: string\n        SensorLife:\n          type: integer\n        Range:\n          type: integer\n        WarmUp:\n          type: integer\n        IdealGain:\n          type: number\n          format: float\n        ZeroSupression:\n          type: integer\n        ZeroFaultLevel:\n          type: number\n          format: float\n        Dampening:\n          type: integer\n        ExposureTime:\n          type: integer\n        StabilityTestTime:\n          type: integer\n        PurgeTime:\n          type: integer\n        TempLowerLimit:\n          type: integer\n        TempUpperLimit:\n          type: integer\n        BumpDueInterval:\n          type: integer\n        BumpGasLevel:\n          type: number\n          format: float\n        BumpTestLowerLimit:\n          type: integer\n        BumpTestUpperLimit:\n          type: integer\n        BumpTestTime:\n          type: integer\n        DefaultCalLevel:\n          type: integer\n        ProductionCalLimit:\n          type: integer\n        FiledCalLowerLimit:\n          type: integer\n        FiledCalUpperLimit:\n          type: integer\n        CalibrationDueInterval:\n          type: integer\n        LinearlizationId:\n          type: string\n          format: uuid\n        TemperatureCompensationId:\n          type: string\n          format: uuid\n    GetSensorCharactersticsDto:\n      type: object\n      x-stoplight:\n        id: xzx68cpky58p4\n      title: GetSensorCharactersticsDto\n      example:\n        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n          SensorUid: 1002\n          GasId: 16bf8e49-f784-4e5a-af8d-311946f52f1c\n          UnitOfMeasurementId: f8e9cc86-0b12-4a39-be06-857539eee1f7\n          SensorName: string\n          SensorType: Pellistor\n          Issue: 1\n          ConfigVersion: 11\n          SensorManufacturer: CRC\n          SensorLife: 10\n          Range: 100\n          WarmUp: 10\n          IdealGain: 10.2\n          ZeroSupression: 10\n          ZeroFaultLevel: 30.5\n          Dampening: 77\n          ExposureTime: 23\n          StabilityTestTime: 45\n          PurgeTime: 36\n          TempLowerLimit: 50\n          TempUpperLimit: 60\n          BumpDueInterval: 22\n          BumpGasLevel: 12.6\n          BumpTestLowerLimit: 15\n          BumpTestUpperLimit: 10\n          BumpTestTime: 40\n          DefaultCalLevel: 30\n          ProductionCalLimit: 30\n          FiledCalLowerLimit: 40\n          FiledCalUpperLimit: 50\n          CalibrationDueInterval: 11\n          Linearlization:\n            id: 197f6eca-1276-0993-bfeb-53cbbbba6f08\n            Issue: 1\n            NoOfLinPoints: 4\n            ApparentGas1: 10.5\n            ActualGas1: 20.3\n          TemperatureCompensationId:\n            id: 897f6eca-6276-4993-bfeb-73cbbbba6f08\n            Issue: 2\n            NoOfTempPoints: 5\n            TempPoint1: 20.5\n            ZeroOffSet1: 15.6\n            Gain1: 10.6\n      properties:\n        id:\n          type: string\n          format: uuid\n          example:\n            - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n        SensorUid:\n          type: integer\n        Gas:\n          type: string\n          x-stoplight:\n            id: robbuhcwv87mi\n        UnitOfMeasurement:\n          type: string\n          x-stoplight:\n            id: 0wxcecbk1geo2\n        SensorName:\n          type: string\n        SensorType:\n          enum:\n            - Toxic\n            - Pellistor\n            - O2\n        Issue:\n          type: integer\n        ConfigVersion:\n          type: integer\n        SensorManufacturer:\n          type: string\n        SensorLife:\n          type: integer\n        Range:\n          type: integer\n        WarmUp:\n          type: integer\n        IdealGain:\n          type: number\n          format: float\n        ZeroSupression:\n          type: integer\n        ZeroFaultLevel:\n          type: number\n          format: float\n        Dampening:\n          type: integer\n        ExposureTime:\n          type: integer\n        StabilityTestTime:\n          type: integer\n        PurgeTime:\n          type: integer\n        TempLowerLimit:\n          type: integer\n        TempUpperLimit:\n          type: integer\n        BumpDueInterval:\n          type: integer\n        BumpGasLevel:\n          type: number\n          format: float\n        BumpTestLowerLimit:\n          type: integer\n        BumpTestUpperLimit:\n          type: integer\n        BumpTestTime:\n          type: integer\n        DefaultCalLevel:\n          type: integer\n        ProductionCalLimit:\n          type: integer\n        FiledCalLowerLimit:\n          type: integer\n        FiledCalUpperLimit:\n          type: integer\n        CalibrationDueInterval:\n          type: integer\n        Linearlization:\n          $ref: '#/components/schemas/GetLinearizationDto'\n          x-stoplight:\n            id: 37j6zaa1sk9o4\n        TemperatureCompensation:\n          $ref: '#/components/schemas/GetTemperatureCompensationDto'\n          x-stoplight:\n            id: ina6z6cg94gwb\n    AddGasDto:\n      title: AddGasDto\n      x-stoplight:\n        id: i65klo9cpgshu\n      type: object\n      example:\n        - Name: Mehtane\n          Formula: CH4\n      required:\n        - Name\n        - Formula\n      properties:\n        Name:\n          type: string\n          x-stoplight:\n            id: 91nfmlguuntgp\n          description: Name of the gas\n        Formula:\n          type: string\n          x-stoplight:\n            id: jagfqdn2w7igm\n          description: Chemical formula of the gas\n    GetGasesDto:\n      type: object\n      title: GetGasesDto\n      example:\n        - id: 597f6eca-3276-4993-bfeb-53cbbbba6f08\n          Name: Methane\n          Formula: CH4\n      x-stoplight:\n        id: ls07okuhsj7bh\n      required:\n        - id\n        - Name\n        - Formula\n      properties:\n        id:\n          type: string\n          format: uuid\n          example:\n            - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n          description: Primary Key\n        Name:\n          type: string\n          example:\n            - Methane\n          description: Name of the gas\n        Formula:\n          type: string\n          example:\n            - CH4\n          description: Chemical formula of the gas\n    UpdateGasesDto:\n      type: object\n      x-stoplight:\n        id: ha5agykehq52m\n      title: UpdateGasesDto\n      example:\n        - id: 597f6eca-3276-4993-bfeb-53cbbbba6f08\n          Name: Methane\n          Formula: CH4\n      properties:\n        id:\n          type: string\n          format: uuid\n          example:\n            - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n          description: Primary Key\n        Name:\n          type: string\n          example:\n            - Methane\n          description: Name of the gas\n        Formula:\n          type: string\n          example:\n            - CH4\n          description: Chemical formula of the gas\n      description: ''\n    AddUoMDto:\n      title: AddUoMDto\n      x-stoplight:\n        id: 1qqdzpafr8x03\n      type: object\n      example:\n        - Name: PPM\n      required:\n        - Name\n      properties:\n        Name:\n          type: string\n          x-stoplight:\n            id: 8aqjbbjwnjxwp\n          description: Name of the unit of measurement\n    GetUoMsDto:\n      type: object\n      title: GetUoMsDto\n      properties:\n        id:\n          type: string\n          format: uuid\n          example:\n            - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n        Name:\n          type: string\n          example:\n            - VOL\n      example:\n        - id: 597f6eca-3276-4993-bfeb-53cbbbba6f08\n          Name: VOL\n      x-stoplight:\n        id: 0kzp0vccha6lz\n    AddLinearizationDto:\n      title: AddLinearizationDto\n      x-stoplight:\n        id: 3e82y40h7y542\n      type: object\n      example:\n        - Issue: 1\n          NoOfLinPoints: 4\n          ApparentGas1: 10.5\n          ActualGas1: 20.3\n      required:\n        - Issue\n        - NoOfLinPoints\n        - ApparentGas1\n        - ActualGas1\n      properties:\n        Issue:\n          type: integer\n        NoOfLinPoints:\n          type: integer\n        ApparentGas1:\n          type: number\n          format: float\n        ActualGas1:\n          type: number\n          format: float\n    GetLinearizationDto:\n      title: GetLinearizationDto\n      x-stoplight:\n        id: m1pisr8jdbtue\n      type: object\n      example:\n        - id: 197f6eca-1276-0993-bfeb-53cbbbba6f08\n          Issue: 1\n          NoOfLinPoints: 4\n          ApparentGas1: 10.5\n          ActualGas1: 20.3\n      required:\n        - id\n        - Issue\n        - NoOfLinPoints\n        - ApparentGas1\n        - ActualGas1\n      properties:\n        id:\n          type: string\n          x-stoplight:\n            id: jsabetbqf2fch\n          format: uuid\n        Issue:\n          type: integer\n          x-stoplight:\n            id: sovuxnjkjsxsa\n        NoOfLinPoints:\n          type: integer\n          x-stoplight:\n            id: ddtxfjhmjvf3r\n        ApparentGas1:\n          type: number\n          x-stoplight:\n            id: n4x3kzqzvlsfd\n          format: float\n        ActualGas1:\n          type: number\n          x-stoplight:\n            id: 2znp2h2pdaatk\n          format: float\n    AddTemperatureCompensationDto:\n      title: AddTemperatureCompensationDto\n      x-stoplight:\n        id: z1rvuz84iuiwx\n      type: object\n      example:\n        - Issue: 2\n          NoOfTempPoints: 5\n          TempPoint1: 20.5\n          ZeroOffSet1: 15.6\n          Gain1: 10.6\n      required:\n        - Issue\n        - NoOfTempPoints\n        - TempPoint1\n        - ZeroOffSet1\n        - Gain1\n      properties:\n        Issue:\n          type: integer\n        NoOfTempPoints:\n          type: integer\n        TempPoint1:\n          type: number\n        ZeroOffSet1:\n          type: number\n          format: float\n        Gain1:\n          type: number\n    GetTemperatureCompensationDto:\n      title: GetTemperatureCompensationDto\n      x-stoplight:\n        id: hf5rp9n0ohodw\n      type: object\n      properties:\n        id:\n          type: string\n          x-stoplight:\n            id: 2opjyl6porfj0\n          format: uuid\n        Issue:\n          type: integer\n          x-stoplight:\n            id: yqtpjcl38nvrg\n        NoOfTempPoints:\n          type: integer\n          x-stoplight:\n            id: tqx93ningukln\n        TempPoint1:\n          type: number\n          x-stoplight:\n            id: bksznlmdgcsms\n        ZeroOffSet1:\n          type: number\n          x-stoplight:\n            id: 78reoskly00p9\n          format: float\n        Gain1:\n          type: number\n          x-stoplight:\n            id: wl3wd6qwapkil\n      example:\n        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n          Issue: 2\n          NoOfTempPoints: 5\n          TempPoint1: 20.5\n          ZeroOffSet1: 15.6\n          Gain1: 10.6\n    ResponseDetails:\n      title: ResponseDetails\n      x-stoplight:\n        id: 89dkxxsgsuyq5\n      type: object\n      x-extension-1: null\n      example:\n        - Title: Not Found\n          Detail: Sensor UId not Found\n          IsSuccess: false\n          Errors:\n            - ErrorCode: Err_1401\n              ErrorDescription: Sensor UId not Found\n              ErrorType: ValidationError\n              Severity: Warning\n          Status: NotFound\n          Instance: 'https://localhost/sensorconfig/1020'\n      properties:\n        Title:\n          type: string\n          x-stoplight:\n            id: cm30beq2bkjp8\n        Detail:\n          type: string\n          x-stoplight:\n            id: eim3ztv8c8r64\n        IsSuccess:\n          x-stoplight:\n            id: skkz6jiowusat\n          example: false\n          type: boolean\n          default: false\n        Errors:\n          x-stoplight:\n            id: fxzr3ljb7e9kt\n          type: array\n          items:\n            $ref: '#/components/schemas/Errors'\n            x-stoplight:\n              id: 4t4b063th5k9h\n        Status:\n          type: string\n          x-stoplight:\n            id: maw4ov7zlou20\n        Instance:\n          type: string\n          x-stoplight:\n            id: pftmcwsdw57nz\n    Errors:\n      title: Errors\n      x-stoplight:\n        id: o492ylr8p7ko7\n      type: object\n      example:\n        - ErrorCode: Err_1401\n          ErrorDescription: Sensor UId not Found\n          ErrorType: ValidationError\n          Severity: Warning\n      properties:\n        ErrorCode:\n          type: string\n          x-stoplight:\n            id: 02pketdbu3vxg\n        ErrorDescription:\n          type: string\n          x-stoplight:\n            id: zn7cjsm77ylps\n        ErrorType:\n          x-stoplight:\n            id: heonz42k0q3oo\n          enum:\n            - RequestError\n            - ValidationError\n            - SystemError\n            - Unknown\n          example: ValidationError\n        Severity:\n          x-stoplight:\n            id: kgflp03wu5bkd\n          enum:\n            - Unknown\n            - Warning\n            - Error\n            - Informational\n            - Exception\n          example: Warning\n    AddSensorModuleDto:\n      title: AddSensorModuleDto\n      x-stoplight:\n        id: e9hom4kw1v8op\n      type: object\n      required:\n        - SerialNumber\n        - SensorSerialNumber\n        - SensorTechnology\n        - BoardVersion\n        - FirmwareVersion\n        - DateOfManufacture\n        - SensorExpiryDate\n        - WarrantyPeriod\n        - ComplianceStatus\n        - SensorConfigId\n      properties:\n        SerialNumber:\n          type: string\n          x-stoplight:\n            id: nddmxfmlku2p0\n          description: Serial number of the sensor module\n        SensorSerialNumber:\n          type: string\n          x-stoplight:\n            id: ukzxju2nv89iv\n          description: Serial number of the sensor\n        SensorTechnology:\n          type: string\n          x-stoplight:\n            id: ncveuvvko1ybd\n          description: Technology used in the sensor\n        BoardVersion:\n          $ref: '#/components/schemas/Version'\n          x-stoplight:\n            id: lygrs1apb8juw\n          description: Version of the sensor module's board\n        FirmwareVersion:\n          $ref: '#/components/schemas/Version'\n          x-stoplight:\n            id: bpaqlas6qmicm\n          description: Version of the firmware in the sensor module\n        DateOfManufacture:\n          type: string\n          x-stoplight:\n            id: p5y3ltk31bzi5\n          format: date-time\n          description: Date and time when the sensor module was manufactured\n        SensorExpiryDate:\n          type: string\n          x-stoplight:\n            id: gcxeuzxb2c641\n          format: date-time\n          description: Date and time when the sensor expires\n        WarrantyPeriod:\n          type: string\n          x-stoplight:\n            id: 3mf3qk4ra0le2\n          description: Warranty period of the sensor module\n        ComplianceStatus:\n          x-stoplight:\n            id: hheolj7x2t3s9\n          description: Compliance status\n          type: integer\n        SensorConfigId:\n          type: string\n          x-stoplight:\n            id: 6kuz8jwgfjgsl\n          format: uuid\n          description: ID of the sensor configuration associated with the module\n      description: ''\n      example:\n        - SerialNumber: MD001001\n          SensorSerialNumber: SR001001\n          SensorTechnology: IR\n          BoardVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          FirmwareVersion:\n            Version: 1\n            Major: 5\n            Minor: 7\n          DateOfManufacture: '2019-08-24T14:15:22Z'\n          SensorExpiryDate: '2019-08-24T14:15:22Z'\n          WarrantyPeriod: 3 Years\n          ComplianceStatus: 1\n          SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n    GetSensorModuleDto:\n      title: GetSensorModuleDto\n      x-stoplight:\n        id: hk0srm47uz4oe\n      type: object\n      example:\n        - Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n          SerialNumber: W1235001\n          SensorSerialNumber: SR0011\n          SensorTechnology: IR\n          BoardVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          FirmwareVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          DateOfManufacture: '2019-08-24T14:15:22Z'\n          SensorExpiryDate: '2019-08-24T14:15:22Z'\n          WarrantyPeriod: 3 years\n          ComplianceStatus: 1\n          SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n          SensorUid: 1003\n          GasName: C02\n          UoM: PPM\n      properties:\n        Id:\n          type: string\n          x-stoplight:\n            id: f88u7lmyimfzt\n          format: uuid\n        SerialNumber:\n          type: string\n        SensorSerialNumber:\n          type: string\n        SensorTechnology:\n          type: string\n        BoardVersion:\n          $ref: '#/components/schemas/Version'\n        FirmwareVersion:\n          $ref: '#/components/schemas/Version'\n        DateOfManufacture:\n          type: string\n          format: date-time\n        SensorExpiryDate:\n          type: string\n          format: date-time\n        WarrantyPeriod:\n          type: string\n        ComplianceStatus:\n          type: integer\n        SensorConfigId:\n          type: string\n          format: uuid\n        SensorUid:\n          type: integer\n          x-stoplight:\n            id: ceyphnkesdmua\n        GasName:\n          type: string\n          x-stoplight:\n            id: het1h26hwlhf4\n        UoM:\n          type: string\n          x-stoplight:\n            id: 5cb9gbrg7mkiq\n    UpdateSensorModuleDto:\n      title: UpdateSensorModuleDto\n      x-stoplight:\n        id: p2blir72z4wgf\n      type: object\n      description: This DTO model is used to update the sensor module\n      required:\n        - Id\n      properties:\n        Id:\n          type: string\n          format: uuid\n        SensorSerialNumber:\n          type: string\n          x-stoplight:\n            id: fjk41okyaj0qu\n        BoardVersion:\n          $ref: '#/components/schemas/Version'\n          x-stoplight:\n            id: ixnxcx6zbmks4\n        FirmwareVersion:\n          $ref: '#/components/schemas/Version'\n        SensorTechnology:\n          type: string\n        DateOfManufacture:\n          type: string\n          format: date-time\n          x-stoplight:\n            id: 624f74v8l67nw\n        SensorExpiryDate:\n          type: string\n          format: date-time\n          x-stoplight:\n            id: v5hqggkapz65j\n        WarrantyPeriod:\n          type: string\n        ComplianceStatus:\n          type: integer\n        SensorConfigId:\n          type: string\n          format: uuid\n      example:\n        - Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n          SensorSerialNumber: SNR20002\n          BoardVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          FirmwareVersion:\n            Version: 2\n            Major: 1\n            Minor: 6\n          SensorTechnology: IR\n          DateOfManufacture: '2019-08-24T14:15:22Z'\n          SensorExpiryDate: '2019-08-24T14:15:22Z'\n          WarrantyPeriod: 3 Years\n          ComplianceStatus: 1\n          SensorConfigId: 24467093-931f-4b0f-9017-6f11b6cf0c03\n    AddDeviceDto:\n      title: AddDeviceDto\n      x-stoplight:\n        id: 6m8rwjoeka59s\n      type: object\n      properties:\n        DeviceType:\n          type: string\n          x-stoplight:\n            id: k737ei7yykou1\n          format: uuid\n        SerialNumber:\n          type: string\n          x-stoplight:\n            id: ahh9gdlekj1p4\n        FirmwareVersion:\n          $ref: '#/components/schemas/Version'\n          x-stoplight:\n            id: ie6qxcqv809n1\n        DateOfManufacture:\n          type: string\n          x-stoplight:\n            id: 8sak6pkijc1ga\n          format: date-time\n        BoardVersion:\n          $ref: '#/components/schemas/Version'\n          x-stoplight:\n            id: p8iih9hjvapqc\n        Status:\n          x-stoplight:\n            id: s6nmbrcdg69ue\n          enum:\n            - AllocationPending\n            - AllocationInProgresses\n            - Allocated\n        SensorModuleId:\n          type: array\n          x-stoplight:\n            id: 64o7lu5vs7t4x\n          items:\n            x-stoplight:\n              id: x88c8cpwpwovw\n            type: string\n            format: uuid\n      example:\n        - DeviceType: 88b21f8e-9de2-4470-8417-7d4188046bf4\n          SerialNumber: W12098111\n          FirmwareVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          DateOfManufacture: '2019-08-24T14:15:22Z'\n          BoardVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          Status: AllocationPending\n          SensorModuleId:\n            - 497f6eca-6276-4993-bfeb-53cbbbba6f08\n            - 397f6eca-1276-2993-bfeb-53cbbbba6f08\n    UpdateDeviceDto:\n      title: UpdateDeviceDto\n      x-stoplight:\n        id: sxoti2b2lifmh\n      type: object\n      properties:\n        Id:\n          type: string\n          format: uuid\n        DeviceType:\n          type: string\n        SerialNumber:\n          type: string\n        FirmwareVersion:\n          type: string\n        DateOfManufacture:\n          type: string\n        BoardVersion:\n          type: string\n        Status:\n          type: string\n      example:\n        - Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n          DeviceType: Scout\n          SerialNumber: w1200011\n          FirmwareVersion: v1.0.2\n          DateOfManufacture: 02-04-2022\n          BoardVersion: v2.0.l4\n    GetDeviceDto:\n      title: GetDeviceDto\n      x-stoplight:\n        id: au1ukyqeekjpe\n      type: object\n      properties:\n        Id:\n          type: string\n          x-stoplight:\n            id: 448ow5bd5c28m\n          format: uuid\n        DeviceType:\n          type: string\n        SerialNumber:\n          type: string\n        FirmwareVersion:\n          $ref: '#/components/schemas/Version'\n        DateOfManufacture:\n          type: string\n          format: date-time\n        BoardVersion:\n          $ref: '#/components/schemas/Version'\n        Status:\n          enum:\n            - AllocationPending\n      example:\n        - Id: 38a5a5bb-dc30-49a2-b175-1de0d1488c43\n          DeviceType: Scout\n          SerialNumber: W120081\n          FirmwareVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          DateOfManufacture: '2019-08-24T14:15:22Z'\n          BoardVersion:\n            Version: 1\n            Major: 4\n            Minor: 6\n          Status: AllocationPending\n    AddCalibrationResultsDto:\n      title: AddCalibrationResultsDto\n      x-stoplight:\n        id: p0utt6lwf4gve\n      type: object\n      properties:\n        DeviceId:\n          type: string\n          x-stoplight:\n            id: i5ro862euztnx\n          format: uuid\n        Result:\n          x-stoplight:\n            id: 9fkkjhg7xe6t0\n          type: boolean\n        CalibratedOn:\n          type: string\n          x-stoplight:\n            id: 9w536psdkah2m\n          format: date-time\n        Note:\n          type: string\n          x-stoplight:\n            id: 6pf371skn5oj4\n      example:\n        - DeviceId: 90849055-5bc5-42d7-ae81-a3806b959be8\n          Result: true\n          CalibratedOn: '2019-08-24T14:15:22Z'\n          Note: Calibration done\n    GetCalibrationResultsDto:\n      title: AddCalibrationResultsDto\n      x-stoplight:\n        id: lzppuyu4p5ywb\n      type: object\n      properties:\n        DeviceId:\n          type: string\n          format: uuid\n        Result:\n          type: boolean\n        CalibratedOn:\n          type: string\n          format: date-time\n        Note:\n          type: string\n      example:\n        - DeviceId: 90849055-5bc5-42d7-ae81-a3806b959be8\n          Result: true\n          CalibratedOn: '2019-08-24T14:15:22Z'\n          Note: Calibration done\n    Version:\n      title: Version\n      x-stoplight:\n        id: 75uw7ra0fxhbc\n      type: object\n      properties:\n        Version:\n          type: integer\n          x-stoplight:\n            id: he9xluzwljgzz\n        Major:\n          type: integer\n          x-stoplight:\n            id: efdiq2iqg0qzq\n        Minor:\n          type: integer\n          x-stoplight:\n            id: ywciqd2ujnsib\n      example:\n        - Version: 1\n          Major: 4\n          Minor: 6\nx-internal: true\n","type":"OPEN_API_SPEC","serviceId":"662211a8d670f747138b734d","sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","operations":null},{"id":"6638ad76145fd11a6e2d3880","name":"Hello API Mock-0.8.xml","path":null,"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<con:soapui-project id=\"5c3212e2-6f93-4cea-81e8-362197cecfdc\" activeEnvironment=\"Default\" name=\"HelloAPI\" resourceRoot=\"\" soapui-version=\"5.2.1\" abortOnError=\"false\" runType=\"SEQUENTIAL\" xmlns:con=\"http://eviware.com/soapui/config\"><con:settings/><con:interface xsi:type=\"con:RestService\" id=\"5cc6f59e-b0b7-435b-a399-408586cc01fb\" wadlVersion=\"http://wadl.dev.java.net/2009/02\" name=\"Hello API\" type=\"rest\" basePath=\"/v1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:description>This is a sample Hello API</con:description><con:settings/><con:definitionCache type=\"TEXT\" rootPart=\"\"/><con:endpoints><con:endpoint>http://api.example.com</con:endpoint><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint></con:endpoints><con:resource name=\"/hello\" path=\"/hello\" id=\"137db4ce-c54f-4373-af1f-867b1adc6096\"><con:settings/><con:parameters/><con:method name=\"getGreeting\" id=\"c3b20b14-81c2-4ec9-abc2-cfb0c6025115\" method=\"GET\"><con:description>Get a new greeting message\nGet a new greeting message</con:description><con:settings/><con:parameters><con:parameter required=\"true\"><con:name>name</con:name><con:style>QUERY</con:style><con:description>Name of people to greet</con:description></con:parameter></con:parameters><con:representation type=\"RESPONSE\"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type=\"RESPONSE\"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type=\"RESPONSE\"><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type=\"RESPONSE\"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name=\"Request 1\" id=\"8d9f58a8-45a7-4c3e-a9d6-aeb6334329c8\" mediaType=\"application/json\"><con:settings/><con:endpoint>http://api.example.com</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id=\"62af16cd-3796-4dbf-b0f0-3416db326b01\" name=\"Hello API TestSuite\"><con:description>TestSuite generated for REST Service [Hello API]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id=\"bc82b283-b5bc-422c-b7c7-04bcaac4270b\" failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"/hello TestCase\" searchProperties=\"true\"><con:description>TestCase generated for REST Resource [/hello] located at [/hello]</con:description><con:settings/><con:testStep type=\"restrequest\" name=\"David Request\" id=\"a6bbe0a8-413a-42d8-810c-b5cad34eea2b\"><con:settings/><con:config service=\"Hello API\" resourcePath=\"/v1/hello\" methodName=\"getGreeting\" xsi:type=\"con:RestRequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:restRequest name=\"David Request\" id=\"8d9f58a8-45a7-4c3e-a9d6-aeb6334329c8\" mediaType=\"application/json\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint><con:request/><con:originalUri>http://lbroudoux-OSX.local/v1/hello</con:originalUri><con:assertion type=\"Valid HTTP Status Codes\" id=\"329eba81-cd27-4522-a5ca-a0e1cafc7ec4\" name=\"Valid HTTP Status Codes\"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type=\"JsonPath Match\" id=\"7394cfdf-b3c9-4d34-ae8b-110e41a2b9d8\" name=\"JsonPath Match\"><con:configuration><path>greeting</path><content>Hello David !</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type=\"Response SLA Assertion\" id=\"d6fe616f-5223-4d24-9f6b-23043cfcc147\" name=\"Response SLA\"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters><entry key=\"name\" value=\"David\" xmlns=\"http://eviware.com/soapui/config\"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type=\"restrequest\" name=\"Gavin Request\" id=\"ac1c9a11-6e65-425f-b9aa-7a20bbf09e41\"><con:settings/><con:config service=\"Hello API\" methodName=\"getGreeting\" resourcePath=\"/v1/hello\" xsi:type=\"con:RestRequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:restRequest name=\"Gavin Request\" id=\"c848f8c4-581a-4f86-89a0-fb105e27d79e\" mediaType=\"application/json\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://lbroudoux-OSX.local:8089/</con:endpoint><con:request/><con:originalUri>http://lbroudoux-OSX.local/v1/hello</con:originalUri><con:assertion type=\"Valid HTTP Status Codes\" id=\"9d065067-859d-4d06-a673-5511144f0f92\" name=\"Valid HTTP Status Codes\"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type=\"JsonPath Match\" id=\"9f43636f-d92d-4fd4-b37c-3c652d5482e5\" name=\"JsonPath Match\"><con:configuration><path>greeting</path><content>Hello Gavin !</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type=\"Response SLA Assertion\" id=\"b159c170-d09c-4123-9a6b-d18d2a517aa7\" name=\"Response SLA\"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters><entry key=\"name\" value=\"Gavin\" xmlns=\"http://eviware.com/soapui/config\"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id=\"107a3cf2-b296-435c-bcd8-130f932965fa\" port=\"8089\" path=\"/\" host=\"lbroudoux-OSX.local\" name=\"Hello API Mock\"><con:settings/><con:properties><con:property><con:name>version</con:name><con:value>0.8</con:value></con:property></con:properties><con:restMockAction name=\"/v1/hello\" method=\"GET\" resourcePath=\"/v1/hello\" id=\"45ced2ad-a1a9-40f5-a65e-c14bd4501c32\"><con:settings/><con:defaultResponse>Unknwon Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>// Script dispatcher is used to select a response based on the incoming request.\n// Here are few examples showing how to match based on path, query param, header and body\n\n// Match based on query parameter\ndef queryString = mockRequest.getRequest().getQueryString()\nlog.info \"QueryString: \" + queryString\n\nif( queryString.contains(\"David\") )\n{\n    // return the name of the response you want to dispatch\n    return \"David Response\"\n}\nelse if( queryString.contains(\"Gavin\") )\n{\n    // return the name of the response you want to dispatch\n    return \"Gavin Response\"\n}\nelse return \"Unknown Response\"</con:dispatchPath><con:response name=\"David Response\" id=\"c6f2e949-26eb-4ed7-959e-f1ff59526bf8\" httpResponseStatus=\"200\" mediaType=\"application/json\"><con:settings/><con:responseContent>{\n\t'name':'David',\n\t'greeting':'Hello David !'\n}\n</con:responseContent></con:response><con:response name=\"Gavin Response\" id=\"ec02e3bf-05a4-4ed3-9c5a-73508c34bfbb\" httpResponseStatus=\"200\" mediaType=\"application/json\"><con:settings/><con:responseContent>{\n\t'name':'Gavin',\n\t'greeting':'Hello Gavin !'\n}\n</con:responseContent></con:response><con:response name=\"Unknwon Response\" id=\"fa7d6da7-e95c-43ff-a120-2961bdf463ea\" httpResponseStatus=\"405\" mediaType=\"application/json\"><con:settings/><con:responseContent/></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>","type":"SOAP_UI_PROJECT","serviceId":"661fbd478c93376ecc00bd06","sourceArtifact":"https://raw.githubusercontent.com/microcks/microcks/master/samples/HelloAPI-soapui-project.xml","operations":null}], "requests":[{"name":"David Request","content":"","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"HelloAPI-soapui-project.xml","headers":[],"id":"661fd8758c93376ecc00bd20","responseId":"661fd8758c93376ecc00bd1f","queryParameters":[{"name":"name","value":"David"}]},{"name":"Gavin Request","content":"","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"HelloAPI-soapui-project.xml","headers":[],"id":"661fd8758c93376ecc00bd22","responseId":"661fd8758c93376ecc00bd21","queryParameters":[{"name":"name","value":"Gavin"}]},{"name":"Example 1","content":"{\"Name\":\"Mehtane\",\"Formula\":\"CH4\"}","operationId":"662211a8d670f747138b734d-POST /gases","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3863","responseId":"6638ad38145fd11a6e2d3862","queryParameters":null},{"name":"Example 1","content":null,"operationId":"662211a8d670f747138b734d-GET /gases","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3865","responseId":"6638ad38145fd11a6e2d3864","queryParameters":null},{"name":"Example 1","content":"{\"Name\":\"PPM\"}","operationId":"662211a8d670f747138b734d-POST /uoms","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3867","responseId":"6638ad38145fd11a6e2d3866","queryParameters":null},{"name":"Example","content":null,"operationId":"662211a8d670f747138b734d-GET /uoms","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3869","responseId":"6638ad38145fd11a6e2d3868","queryParameters":null},{"name":"Example 1","content":"{\"SensorUid\":1002,\"GasId\":\"16bf8e49-f784-4e5a-af8d-311946f52f1c\",\"UnitOfMeasurementId\":\"f8e9cc86-0b12-4a39-be06-857539eee1f7\",\"SensorName\":\"Dual Sensor\",\"SensorType\":\"Pellistor\",\"Issue\":1,\"ConfigVersion\":11,\"SensorManufacturer\":\"CRC\",\"SensorLife\":10,\"Range\":100,\"WarmUp\":10,\"IdealGain\":10.2,\"ZeroSupression\":10,\"ZeroFaultLevel\":30.5,\"Dampening\":77,\"ExposureTime\":23,\"StabilityTestTime\":45,\"PurgeTime\":36,\"TempLowerLimit\":50,\"TempUpperLimit\":60,\"BumpDueInterval\":22,\"BumpGasLevel\":12.6,\"BumpTestLowerLimit\":15,\"BumpTestUpperLimit\":10,\"BumpTestTime\":40,\"DefaultCalLevel\":30,\"ProductionCalLimit\":30,\"FiledCalLowerLimit\":40,\"FiledCalUpperLimit\":50,\"CalibrationDueInterval\":11,\"LinearlizationId\":\"697f6eca-1276-4993-bfeb-53cbbbba6f08\",\"TemperatureCompensationId\":\"897f6eca-6276-2993-bfeb-53cbbbba6f08\"}","operationId":"662211a8d670f747138b734d-POST /api/sensorcharacteristics","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d386b","responseId":"6638ad38145fd11a6e2d386a","queryParameters":null},{"name":"Example 1","content":"{\"Issue\":1,\"NoOfLinPoints\":4,\"ApparentGas1\":10.5,\"ActualGas1\":20.3}","operationId":"662211a8d670f747138b734d-POST /api/linearization","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d386d","responseId":"6638ad38145fd11a6e2d386c","queryParameters":null},{"name":"Example 1","content":null,"operationId":"662211a8d670f747138b734d-GET /api/linearization","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d386f","responseId":"6638ad38145fd11a6e2d386e","queryParameters":null},{"name":"Example 1","content":"{\"Issue\":2,\"NoOfTempPoints\":5,\"TempPoint1\":20.5,\"ZeroOffSet1\":15.6,\"Gain1\":10.6}","operationId":"662211a8d670f747138b734d-POST /api/temperature-compensation","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]},{"name":"Content-Type","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3871","responseId":"6638ad38145fd11a6e2d3870","queryParameters":null},{"name":"Example 1","content":null,"operationId":"662211a8d670f747138b734d-GET /api/temperature-compensation","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3873","responseId":"6638ad38145fd11a6e2d3872","queryParameters":null},{"name":"Example 1","content":"{\"SerialNumber\":\"MD001001\",\"SensorSerialNumber\":\"SR001001\",\"SensorTechnology\":\"IR\",\"BoardVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"FirmwareVersion\":{\"Version\":1,\"Major\":5,\"Minor\":7},\"DateOfManufacture\":\"2019-08-24T14:15:22Z\",\"SensorExpiryDate\":\"2019-08-24T14:15:22Z\",\"WarrantyPeriod\":\"3 Years\",\"ComplianceStatus\":1,\"SensorConfigId\":\"24467093-931f-4b0f-9017-6f11b6cf0c03\"}","operationId":"662211a8d670f747138b734d-POST /sensor-modules","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]},{"name":"Accept","values":["application/json"]},{"name":"Content-Type","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3875","responseId":"6638ad38145fd11a6e2d3874","queryParameters":null},{"name":"Example 1","content":null,"operationId":"662211a8d670f747138b734d-GET /sensor-modules","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3877","responseId":"6638ad38145fd11a6e2d3876","queryParameters":null},{"name":"Example 1","content":"[\"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\"391f6eca-2276-1993-bfeb-33cbbbba6f08\"]","operationId":"662211a8d670f747138b734d-PUT /sensor-modules/update/delete","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d3879","responseId":"6638ad38145fd11a6e2d3878","queryParameters":null},{"name":"Example 1","content":null,"operationId":"662211a8d670f747138b734d-GET /devices","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d387b","responseId":"6638ad38145fd11a6e2d387a","queryParameters":null},{"name":"Example 1","content":"{\"DeviceType\":\"88b21f8e-9de2-4470-8417-7d4188046bf4\",\"SerialNumber\":\"W12098111\",\"FirmwareVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"DateOfManufacture\":\"2019-08-24T14:15:22Z\",\"BoardVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"Status\":\"AllocationPending\",\"SensorModuleId\":[\"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\"397f6eca-1276-2993-bfeb-53cbbbba6f08\"]}","operationId":"662211a8d670f747138b734d-POST /devices","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d387d","responseId":"6638ad38145fd11a6e2d387c","queryParameters":null},{"name":"Example 1","content":"{\"DeviceId\":\"90849055-5bc5-42d7-ae81-a3806b959be8\",\"Result\":true,\"CalibratedOn\":\"2019-08-24T14:15:22Z\",\"Note\":\"Calibration done\"}","operationId":"662211a8d670f747138b734d-POST /calibration/results","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":[{"name":"Accept","values":["application/json"]},{"name":"Content-Type","values":["application/json"]},{"name":"Accept","values":["application/json"]}],"id":"6638ad38145fd11a6e2d387f","responseId":"6638ad38145fd11a6e2d387e","queryParameters":null},{"name":"David Request","content":"","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"https://raw.githubusercontent.com/microcks/microcks/master/samples/HelloAPI-soapui-project.xml","headers":[],"id":"6638ad76145fd11a6e2d3882","responseId":"6638ad76145fd11a6e2d3881","queryParameters":[{"name":"name","value":"David"}]},{"name":"Gavin Request","content":"","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"https://raw.githubusercontent.com/microcks/microcks/master/samples/HelloAPI-soapui-project.xml","headers":[],"id":"6638ad76145fd11a6e2d3884","responseId":"6638ad76145fd11a6e2d3883","queryParameters":[{"name":"name","value":"Gavin"}]}], "responses":[{"name":"David Response","content":"{\n\t'name':'David',\n\t'greeting':'Hello David !'\n}\n","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"HelloAPI-soapui-project.xml","headers":null,"id":"661fd8758c93376ecc00bd1f","status":"200","mediaType":"application/json","dispatchCriteria":"David Response","fault":false},{"name":"Gavin Response","content":"{\n\t'name':'Gavin',\n\t'greeting':'Hello Gavin !'\n}\n","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"HelloAPI-soapui-project.xml","headers":null,"id":"661fd8758c93376ecc00bd21","status":"200","mediaType":"application/json","dispatchCriteria":"Gavin Response","fault":false},{"name":"Example 1","content":"{\"Title\":\"Conflict\",\"Detail\":\"Gas name already exists\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1402\",\"ErrorDescription\":\"Gas name already exists\",\"ErrorType\":\"RequestError\",\"Severity\":\"Warning\"}],\"Status\":\"Conflict\",\"Instance\":\"https://localhost/gases\"}","operationId":"662211a8d670f747138b734d-POST /gases","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3862","status":"409","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"[{\"id\":\"597f6eca-3276-4993-bfeb-53cbbbba6f08\",\"Name\":\"Methane\",\"Formula\":\"CH4\"},{\"id\":\"297f6eca-1276-4993-bfeb-53cbbbba6f08\",\"Name\":\"Carbon Monoxide\",\"Formula\":\"CO\"}]","operationId":"662211a8d670f747138b734d-GET /gases","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3864","status":"200","mediaType":"application/json","dispatchCriteria":null,"fault":false},{"name":"Example 1","content":"{\"Title\":\"Conflict\",\"Detail\":\"UOM name already exists\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1006\",\"ErrorDescription\":\"UOM name already exists\",\"ErrorType\":\"RequestError\",\"Severity\":\"Warning\"}],\"Status\":\"Conflict\",\"Instance\":\"https://localhost/uoms\"}","operationId":"662211a8d670f747138b734d-POST /uoms","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3866","status":"409","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example","content":"[{\"id\":\"597f6eca-3276-4993-bfeb-53cbbbba6f08\",\"Name\":\"%VOL\"},{\"id\":\"397f6eca-4276-4193-bfeb-63cbbbba6f08\",\"Name\":\"PPM\"}]","operationId":"662211a8d670f747138b734d-GET /uoms","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3868","status":"200","mediaType":"application/json","dispatchCriteria":null,"fault":false},{"name":"Example 1","content":"{\"Title\":\"Conflict\",\"Detail\":\"Sensor UId already exists\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1009\",\"ErrorDescription\":\"Sensor UId already exists\",\"ErrorType\":\"ValidationError\",\"Severity\":\"Warning\"}],\"Status\":\"Conflict\",\"Instance\":\"https://localhost/sensor/characteristics\"}","operationId":"662211a8d670f747138b734d-POST /api/sensorcharacteristics","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d386a","status":"409","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"{\"Title\":\"Bad Request\",\"Detail\":\"Issue is required\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1012\",\"ErrorDescription\":\"Issue is required\",\"ErrorType\":\"ValidationError\",\"Severity\":\"Warning\"}],\"Status\":\"BadRequest\",\"Instance\":\"https://localhost/linearization\"}","operationId":"662211a8d670f747138b734d-POST /api/linearization","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d386c","status":"400","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"{\"id\":\"197f6eca-1276-0993-bfeb-53cbbbba6f08\",\"Issue\":1,\"NoOfLinPoints\":4,\"ApparentGas1\":10.5,\"ActualGas1\":20.3}","operationId":"662211a8d670f747138b734d-GET /api/linearization","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d386e","status":"200","mediaType":"application/json","dispatchCriteria":null,"fault":false},{"name":"Example 1","content":"{\"Title\":\"Bad Request\",\"Detail\":\"Issue is required\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1013\",\"ErrorDescription\":\"Issue  is required\",\"ErrorType\":\"ValidationError\",\"Severity\":\"Warning\"}],\"Status\":\"BadRequest\",\"Instance\":\"https://localhost/temperaturecomensation\"}","operationId":"662211a8d670f747138b734d-POST /api/temperature-compensation","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3870","status":"400","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"{\"id\":\"497f6eca-6276-4993-bfeb-53cbbbba6f08\",\"Issue\":2,\"NoOfTempPoints\":5,\"TempPoint1\":20.5,\"ZeroOffSet1\":15.6,\"Gain1\":10.6}","operationId":"662211a8d670f747138b734d-GET /api/temperature-compensation","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3872","status":"200","mediaType":"application/json","dispatchCriteria":null,"fault":false},{"name":"Example 1","content":"{\"Title\":\"Conflict\",\"Detail\":\"Sensor module already exists\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1014\",\"ErrorDescription\":\"Sensor module already exists\",\"ErrorType\":\"RequestError\",\"Severity\":\"Warning\"}],\"Status\":\"NotFound\",\"Instance\":\"https://localhost/sensor-module\"}","operationId":"662211a8d670f747138b734d-POST /sensor-modules","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3874","status":"409","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"[{\"Id\":\"38a5a5bb-dc30-49a2-b175-1de0d1488c43\",\"SerialNumber\":\"W1235001\",\"SensorSerialNumber\":\"SR0011\",\"SensorTechnology\":\"IR\",\"BoardVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"FirmwareVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"DateOfManufacture\":\"2019-08-24T14:15:22Z\",\"SensorExpiryDate\":\"2019-08-24T14:15:22Z\",\"WarrantyPeriod\":\"3 years\",\"ComplianceStatus\":1,\"SensorConfigId\":\"24467093-931f-4b0f-9017-6f11b6cf0c03\",\"SensorUid\":1003,\"GasName\":\"C02\",\"UoM\":\"PPM\"}]","operationId":"662211a8d670f747138b734d-GET /sensor-modules","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3876","status":"200","mediaType":"application/json","dispatchCriteria":null,"fault":false},{"name":"Example 1","content":"{\"Title\":\"Not Found\",\"Detail\":\"Sensor module not Found\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1017\",\"ErrorDescription\":\"Sensor Module Found\",\"ErrorType\":\"ValidationError\",\"Severity\":\"Warning\"}],\"Status\":\"NotFound\",\"Instance\":\"https://localhost/sensor-modules/update/delete\"}","operationId":"662211a8d670f747138b734d-PUT /sensor-modules/update/delete","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d3878","status":"404","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"[{\"Id\":\"38a5a5bb-dc30-49a2-b175-1de0d1488c43\",\"DeviceType\":\"Scout\",\"SerialNumber\":\"W120081\",\"FirmwareVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"DateOfManufacture\":\"2019-08-24T14:15:22Z\",\"BoardVersion\":{\"Version\":1,\"Major\":4,\"Minor\":6},\"Status\":\"AllocationPending\"}]","operationId":"662211a8d670f747138b734d-GET /devices","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d387a","status":"200","mediaType":"application/json","dispatchCriteria":null,"fault":false},{"name":"Example 1","content":"{\"Title\":\"Conflict\",\"Detail\":\"Device already exists\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1020\",\"ErrorDescription\":\"Device already exists\",\"ErrorType\":\"RequestError\",\"Severity\":\"Warning\"}],\"Status\":\"NotFound\",\"Instance\":\"https://localhost/devices\"}","operationId":"662211a8d670f747138b734d-POST /devices","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d387c","status":"409","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"Example 1","content":"{\"Title\":\"Not Found\",\"Detail\":\"Device not Found\",\"IsSuccess\":false,\"Errors\":[{\"ErrorCode\":\"Err_1201\",\"ErrorDescription\":\"Device not Found\",\"ErrorType\":\"ValidationError\",\"Severity\":\"Warning\"}],\"Status\":\"NotFound\",\"Instance\":\"https://localhost/device/calibration/results\"}","operationId":"662211a8d670f747138b734d-POST /calibration/results","testCaseId":null,"sourceArtifact":"Connect-Manufacturing-software-Backend-APIs (3) (1).yaml","headers":null,"id":"6638ad38145fd11a6e2d387e","status":"404","mediaType":"application/json","dispatchCriteria":null,"fault":true},{"name":"David Response","content":"{\n\t'name':'David',\n\t'greeting':'Hello David !'\n}\n","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"https://raw.githubusercontent.com/microcks/microcks/master/samples/HelloAPI-soapui-project.xml","headers":null,"id":"6638ad76145fd11a6e2d3881","status":"200","mediaType":"application/json","dispatchCriteria":"David Response","fault":false},{"name":"Gavin Response","content":"{\n\t'name':'Gavin',\n\t'greeting':'Hello Gavin !'\n}\n","operationId":"661fbd478c93376ecc00bd06-/v1/hello","testCaseId":null,"sourceArtifact":"https://raw.githubusercontent.com/microcks/microcks/master/samples/HelloAPI-soapui-project.xml","headers":null,"id":"6638ad76145fd11a6e2d3883","status":"200","mediaType":"application/json","dispatchCriteria":"Gavin Response","fault":false}], "eventMessages":[]}